name: Build Custom Zrvr Docker Image

on:
  workflow_call:
    inputs:
      service:
        description: 'Service folder name (e.g., Lobby)'
        required: true
        type: string
      mcversion:
        description: 'Minecraft version (e.g., 1.20.5)'
        required: false
        type: string
        default: '1.21.4'
      type:
        description: 'Instance type (e.g., paper, velocity)'
        required: false
        type: string
        default: 'paper'
      environment:
        required: false
        type: string
        default: ''

env:
  REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: 'true'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.5.0
        with:
          cosign-release: 'v2.2.4'

      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}/${{ inputs.service }}

      - name: Calculate scripts checksum
        id: checksum
        run: |
          chmod +x ./Zrvr/scripts/external/calculate-checksum.sh
          SCRIPTS_CHECKSUM=$(./Zrvr/scripts/external/calculate-checksum.sh)
          echo "SCRIPTS_CHECKSUM=$SCRIPTS_CHECKSUM" >> $GITHUB_ENV

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Zrvr/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            APP_PATH=./${{ inputs.service }}
            MINECRAFT_VERSION=${{ inputs.mcversion }}
            TYPE=${{ inputs.type }}
            SCRIPTS_CHECKSUM=${{ env.SCRIPTS_CHECKSUM }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Sign Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
